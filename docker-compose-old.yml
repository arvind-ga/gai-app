version: '3.12-slim'

services:
  nginx:
    build:
      context: ./proxy
      dockerfile: Dockerfile  # Custom Nginx Dockerfile
    container_name: proxy
    image: gaicr.azurecr.io/test/nginx
    ports:
      - "80:80"     # Expose Nginx on port 80 to the public
    volumes:
      - ${WEBAPP_STORAGE_HOME}/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - nextjs    # Ensure frontend and backend are running before Nginx starts
      - fastapi
    networks:
      - dev-network
    command: ["nginx", "-g", "daemon off;"]

  nextjs:
    build:
      context: ./nextjs
      dockerfile: Dockerfile
    image: gaicr.azurecr.io/test/nextjs
    volume:
      - ${WEBAPP_STORAGE_HOME}/nextjs:/app
      - ${WEBAPP_STORAGE_HOME}/app/node_modules:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - fastapi
    networks:
      - dev-network

  fastapi:
    build:
      context: .
    image: gaicr.azurecr.io/test/fastapi
    ports:
      - "8000:8000"
    environment:
#      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEXT_PUBLIC_API_KEY=4bhY9bWCURUV9kNRXaSv2Te9nZSENvFj
    depends_on:
      - mongodb
      - redis
    networks:
      - dev-network

  mongodb:
    image: gaicr.azurecr.io/test/mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=bringthemhome
      - MONGO_INITDB_ROOT_PASSWORD=CuQGaToMW15h7DND
    ports:
      - "10255:10255" # for testing purposes you can expose the MongoDB port
    volumes:
      - mongodb_data:/data/db
    networks:
      - dev-network

  redis:
    image: gaicr.azurecr.io/test/redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ${WEBAPP_STORAGE_HOME}/redis.conf:/usr/local/etc/redis/redis.conf
    sysctls:
      - net.core.somaxconn=1024
      - vm.overcommit_memory=1
    networks:
      - dev-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    # command: ["redis-server", "--save", "", "--maxmemory", "1024mb", "--maxmemory-policy", "allkeys-lru"]

volumes:
  mongodb_data:
  redis_data:

networks:
  dev-network:
    driver: bridge